require "nvchad.mappings"

-- add yours here

local map = vim.keymap.set

map("n", ";", ":", { desc = "CMD enter command mode" })
map("i", "jk", "<ESC>")
map('n', '<leader>td' , "<cmd>Telescope dap commands<CR>", { desc = "telescope DAP commands"})
map('n', '<leader><F5>' , function() require("dapui").toggle() end, { desc = "DAPui Toggle"})
map('n', '<F4>', function() 
  require('dap').terminate() 
end, { desc = "DAP Terminate"})
map('n', '<F5>', function() require('dap').continue() end, { desc = "DAP start/continue"})
map('n', '<F7>', function() require('dap').step_over() end, { desc = "DAP step over"})
map('n', '<F8>', function() require('dap').step_into() end, { desc = "DAP step into "})
map('n', '<F9>', function() require('dap').step_out() end, { desc = "DAP step out"})
map('n', '<F10>', function() require('dap').toggle_breakpoint() end, { desc = "DAP toggle breakpoint"})
map('n', '<Leader>B', function() require('dap').set_breakpoint() end, { desc = "DAP set breakpoint"})
map('n', '<Leader>lp', function() require('dap').set_breakpoint(nil, nil, vim.fn.input('Log point message: ')) end, { desc = "DAP log point message"})
map('n', '<Leader>dr', function() require('dap').repl.open() end, { desc = "DAP repl open"})
map('n', '<Leader>dl', function() require('dap').run_last() end, { desc = "DAP run last"})
map({'n', 'v'}, '<Leader>dh', function()
  require('dap.ui.widgets').hover()
end, { desc = "DAPui widgets hover"})
map({'n', 'v'}, '<Leader>dp', function()
  require('dap.ui.widgets').preview()
end, { desc = "DAPui widgets preview"})
map('n', '<Leader>df', function()
  local widgets = require('dap.ui.widgets')
  widgets.centered_float(widgets.frames)
end, { desc = "DAPui widgets float frames"})
map('n', '<Leader>ds', function()
  local widgets = require('dap.ui.widgets')
  widgets.centered_float(widgets.scopes)
end, { desc = "DAPui widgets float scopes"})
map('n', '<F5>e', function()
  local user_input = vim.fn.input("Evaluate php:")
  require('dapui').eval(user_input)
end, { desc = "DAPui eval php"})

-- map({ "n", "i", "v" }, "<C-s>", "<cmd> w <cr>")
